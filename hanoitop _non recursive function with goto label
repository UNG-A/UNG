#include <stdio.h>
#include <stdlib.h>

//HANOI top non_recursive

typedef struct {

	int max;
	int* arr;
	int ptr;

}stk;

stk* s;

stk* initializing(stk *s ,int max) {
	s->max = max;
	s->arr = calloc(max, sizeof(int));
	s->ptr = 0;
}

int push(stk* s, int a) {

	s->arr[s->ptr++] = a;
	return s->arr[s->ptr - 1];
}

int pop(stk *s) {

	return s->arr[--s->ptr];

}

void hanoi_Top(int n, char A, char B, char C) {
	int temp;

	
	TOP:
	if(n>=1){
		n = push(s, n)-1;
		
		A = push(s, A);
		temp = C;
		C = push(s, B);
		B = push(s, temp);

		goto TOP;
	}

	C = pop(s);
	B = pop(s);
	A = pop(s);
	n = pop(s);

	printf(" %2d %2c to %2c \n",n, A, C);

	if (n > 1) {//인자를 바꾸고 푸쉬를 진행하면 되지 않나?

		n = push(s, n - 1);
		temp = A;
		A = push(s, B);
		B = push(s, temp);
		C = push(s, C);
	}

	
	goto TOP;


}


int main() {
	s = malloc(sizeof(int));
	s = initializing(s,100);
	char from = 'A';
	char by = 'B';
	char to = 'C';
	hanoi_Top(3, from, by, to);

}
