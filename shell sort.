#include <stdio.h>
#include<stdlib.h>

//note in my ebook -> if I set the h=1,4,13,40 will be more effcient. because those of numbers does not check the same index twice or more. so Set the first H = one of those numbers.
//and h/=3 will be make one of those number as well.

// I got the error -> I thought triple for loop is not efficient. that point makes me can't make the code. 
// And I got the hint .even If I use triple loop . time complexcity is not n^3. because . time complexcity is not multiplication . n , n^2 --> n^2.
// and this is straight insertion variation. if almost arranged straight insertion is efficent . if not , that isn't efficent. so shell sort was made from this idea.
void swap(int *a, int *b) {

	int temp = *a;
	*a = *b;
	*b = temp;
}






void shell_sort(int arr[], int n) {

	int i, j;
	int h;
	for (h=n/2; h > 0; h /= 2) {

		for (i = 0; i +h < n; i++)
		{
			for (j = i + h; j < n; j+=h) {
				if (arr[i] > arr[j])
					swap(&arr[i], &arr[j]);
			}

		}
	}

}


void print(int arr[], int n) {
	int i;

	for (i = 0; i < n; i++) {

		printf("%3d", arr[i]);
	}
}


int main() {

	int arr[8] = { 7,1,3,2,8,6,4,5 };
	shell_sort(arr, 8);
	print(arr, 8);
}
