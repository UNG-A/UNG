#include <stdio.h>
#include <stdlib.h>

//8 queen backtracking prolbem, and non_recursive.


int pos[8];
int flag[8];
int flag_b[15];
int flag_c[15];

typedef struct {


	int* arr;
	int ptr;
	int max;

}stk;

stk* initializing(stk *s ,int max) {//return the structure pointer

	s->arr = calloc(max, sizeof(int));
	s->ptr = 0;
	s->max = max;


}

void push(stk* s,int n) {

	s->arr[s->ptr++] = n;


}

void pop(stk* s) {

	s->arr[--s->ptr];
	printf("%2d",s->arr[s->ptr]);

}

int isEmpty(stk* s) {

	if (s->ptr <= 0)
		return -1;
}


void print(stk *s) {

	int counter = 0;
	int temp = s->ptr;
	while (counter < temp) {
		pop(s);
		counter++;
	}
	printf("\n");
}


void set(stk *s,int i) {
	//1. make the 8 rook program.(the rook can not be catched by anohter rook)

	int j;
	int temp;
	while (1) {
		for (j = 0; j < 8; j++) {
			if (!flag[j]) {

				//pos[i] = j; 
				push(s, j);

				if (i == 7)//proceeding 7times of pop.
					print(s);
				else {
					//if else statemnt is out of the (if(!flag[j]) braces. even flag[j] is not filled . the recursion will be executed.
					flag[j] = 1;
					i = i + 1;
					temp = j;// remember the last of the scene "j"
					//	flag[j] = 0;  ploblem

				}

			}
		}
		//7,6,5,4,3,2,1,0 was printed.
		// in recursion code makes flag[7] = 0 and make continuning the loop.
	}
}



int main() {
	stk* s = malloc(sizeof(int));
	s = initializing(s, 1000);

	set(0);


}
